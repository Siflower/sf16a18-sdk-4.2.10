--- a/net/mac80211/rc80211_minstrel.c
+++ b/net/mac80211/rc80211_minstrel.c
@@ -176,8 +176,10 @@
 						       cur_prob,
 						       EWMA_LEVEL);
 		}
+#ifdef CPTCFG_MAC80211_DEBUGFS
 		mrs->att_hist += mrs->attempts;
 		mrs->succ_hist += mrs->success;
+#endif
 	} else {
 		mrs->sample_skipped++;
 	}
--- a/net/mac80211/rc80211_minstrel.h
+++ b/net/mac80211/rc80211_minstrel.h
@@ -57,9 +57,12 @@
 	/* current / last sampling period attempts/success counters */
 	u16 attempts, last_attempts;
 	u16 success, last_success;
-
+#ifdef CPTCFG_MAC80211_DEBUGFS
 	/* total attempts/success counters */
 	u32 att_hist, succ_hist;
+#else
+	u8 att_hist;
+#endif
 
 	/* statistis of packet delivery probability
 	 *  prob_ewma - exponential weighted moving average of prob
--- a/net/mac80211/rc80211_minstrel_ht.c
+++ b/net/mac80211/rc80211_minstrel_ht.c
@@ -159,45 +159,65 @@
  */
 const struct mcs_group minstrel_mcs_groups[] = {
 	MCS_GROUP(1, 0, BW_20, 5),
+#if MINSTREL_MAX_STREAMS >= 2
 	MCS_GROUP(2, 0, BW_20, 4),
+#endif
 	MCS_GROUP(3, 0, BW_20, 4),
 
 	MCS_GROUP(1, 1, BW_20, 5),
+#if MINSTREL_MAX_STREAMS >= 2
 	MCS_GROUP(2, 1, BW_20, 4),
+#endif
 	MCS_GROUP(3, 1, BW_20, 4),
 
 	MCS_GROUP(1, 0, BW_40, 4),
+#if MINSTREL_MAX_STREAMS >= 2
 	MCS_GROUP(2, 0, BW_40, 4),
+#endif
 	MCS_GROUP(3, 0, BW_40, 4),
 
 	MCS_GROUP(1, 1, BW_40, 4),
+#if MINSTREL_MAX_STREAMS >= 2
 	MCS_GROUP(2, 1, BW_40, 4),
+#endif
 	MCS_GROUP(3, 1, BW_40, 4),
 
 	CCK_GROUP(8),
 
 	VHT_GROUP(1, 0, BW_20, 5),
+#if MINSTREL_MAX_STREAMS >= 2
 	VHT_GROUP(2, 0, BW_20, 4),
+#endif
 	VHT_GROUP(3, 0, BW_20, 4),
 
 	VHT_GROUP(1, 1, BW_20, 5),
+#if MINSTREL_MAX_STREAMS >= 2
 	VHT_GROUP(2, 1, BW_20, 4),
+#endif
 	VHT_GROUP(3, 1, BW_20, 4),
 
 	VHT_GROUP(1, 0, BW_40, 4),
+#if MINSTREL_MAX_STREAMS >= 2
 	VHT_GROUP(2, 0, BW_40, 4),
+#endif
 	VHT_GROUP(3, 0, BW_40, 4),
 
 	VHT_GROUP(1, 1, BW_40, 4),
+#if MINSTREL_MAX_STREAMS >= 2
 	VHT_GROUP(2, 1, BW_40, 4),
+#endif
 	VHT_GROUP(3, 1, BW_40, 4),
 
 	VHT_GROUP(1, 0, BW_80, 4),
+#if MINSTREL_MAX_STREAMS >= 2
 	VHT_GROUP(2, 0, BW_80, 4),
+#endif
 	VHT_GROUP(3, 0, BW_80, 4),
 
 	VHT_GROUP(1, 1, BW_80, 4),
+#if MINSTREL_MAX_STREAMS >= 2
 	VHT_GROUP(2, 1, BW_80, 4),
+#endif
 	VHT_GROUP(3, 1, BW_80, 4),
 };
 
--- a/net/mac80211/rc80211_minstrel_ht.h
+++ b/net/mac80211/rc80211_minstrel_ht.h
@@ -13,7 +13,11 @@
  * The number of streams can be changed to 2 to reduce code
  * size and memory footprint.
  */
+#ifdef CPTCFG_MAC80211_LITE_MEMORY
+#define MINSTREL_MAX_STREAMS		1
+#else
 #define MINSTREL_MAX_STREAMS		3
+#endif
 #define MINSTREL_HT_STREAM_GROUPS	4 /* BW(=2) * SGI(=2) */
 #ifdef CPTCFG_MAC80211_RC_MINSTREL_VHT
 #define MINSTREL_VHT_STREAM_GROUPS	6 /* BW(=3) * SGI(=2) */
--- a/local-symbols
+++ b/local-symbols
@@ -73,6 +73,8 @@
 MAC80211_STA_HASH_MAX_SIZE=
 MAC80211_PRIV_IOCTL=
 MAC80211_SIFLOWER_MONITOR_ENABLE=
+MAC80211_LITE_MEMORY=
+MAC80211_LITE_FLASH=
 WLAN=
 WIRELESS_WDS=
 PCMCIA_RAYCS=
