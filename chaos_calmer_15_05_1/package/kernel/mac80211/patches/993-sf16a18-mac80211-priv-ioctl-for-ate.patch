--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -3599,7 +3599,9 @@
 	void (*wake_tx_queue)(struct ieee80211_hw *hw,
 			      struct ieee80211_txq *txq);
 	void (*sync_rx_queues)(struct ieee80211_hw *hw);
+
+	int (*priv_ioctl)(struct ieee80211_hw *hw, struct ifreq *rq, int cmd);
 
 	int (*start_nan)(struct ieee80211_hw *hw,
 			 struct ieee80211_vif *vif,
 			 struct cfg80211_nan_conf *conf);
--- a/net/mac80211/Kconfig
+++ b/net/mac80211/Kconfig
@@ -308,6 +308,10 @@
 
 	  If unsure, say N.
 
+config MAC80211_PRIV_IOCTL
+	bool "Enable mac80211's private ioctl function, this is add by siflower"
+    depends on MAC80211
+
 config MAC80211_STA_HASH_MAX_SIZE
 	int "Station hash table maximum size" if MAC80211_DEBUG_MENU
 	default 0
--- a/net/mac80211/driver-ops.h
+++ b/net/mac80211/driver-ops.h
@@ -69,6 +69,20 @@
 int drv_start(struct ieee80211_local *local);
 void drv_stop(struct ieee80211_local *local);
 
+#ifdef CPTCFG_MAC80211_PRIV_IOCTL
+static inline int drv_ioctl(struct ieee80211_local *local,
+                struct ifreq *rq, int cmd)
+{
+    int ret = 0;
+	might_sleep();
+
+    if(local->ops->priv_ioctl)
+        ret = local->ops->priv_ioctl(&local->hw, rq, cmd);
+    return ret;
+}
+#endif
+
+
 #ifdef CONFIG_PM
 static inline int drv_suspend(struct ieee80211_local *local,
 			      struct cfg80211_wowlan *wowlan)
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -1188,6 +1188,22 @@
 }
 #endif
 
+#ifdef CPTCFG_MAC80211_PRIV_IOCTL
+static int ieee80211_do_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
+{
+	//if some driver do not implement the ioctl function,
+	//do nothing
+
+	struct ieee80211_sub_if_data *sdata = IEEE80211_DEV_TO_SUB_IF(dev);
+	struct ieee80211_local *local = sdata->local;
+	int ret = -1;
+
+	ret = drv_ioctl(local, ifr, cmd);
+	return ret;
+}
+#endif
+
+
 static const struct net_device_ops ieee80211_dataif_ops = {
 #if LINUX_VERSION_IS_LESS(4,10,0)
 	.ndo_change_mtu = __change_mtu,
@@ -1270,6 +1270,9 @@
 #else
 	.ndo_get_stats64 = bp_ieee80211_get_stats64,
 #endif
+#ifdef CPTCFG_MAC80211_PRIV_IOCTL
+	.ndo_do_ioctl = ieee80211_do_ioctl,
+#endif
 };
 
 static void ieee80211_if_free(struct net_device *dev)
--- a/local-symbols
+++ b/local-symbols
@@ -70,6 +70,7 @@
 MAC80211_TDLS_DEBUG=
 MAC80211_DEBUG_COUNTERS=
 MAC80211_STA_HASH_MAX_SIZE=
+MAC80211_PRIV_IOCTL=
 WLAN=
 WIRELESS_WDS=
 PCMCIA_RAYCS=
@@ -1196,3 +1197,4 @@
 USB_PRINTER=
 USB_WDM=
 USB_TMC=
+WLAN_VENDOR_RWNX=
